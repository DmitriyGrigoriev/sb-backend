# Generated by Django 3.1 on 2021-01-21 09:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='NoSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Код')),
                ('description', models.CharField(max_length=100, verbose_name='Описание')),
                ('date_order', models.BooleanField(default=False, verbose_name='Порядок Дат')),
            ],
            options={
                'verbose_name': 'Серия Номеров',
                'verbose_name_plural': 'Серии Номеров',
                'db_table': 'no_series',
            },
        ),
        migrations.CreateModel(
            name='ServicePrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField(auto_now_add=True, null=True, unique=True, verbose_name='Дата начала')),
                ('service_code', models.CharField(max_length=20, verbose_name='Код услуги')),
                ('unit_price', models.DecimalField(decimal_places=20, max_digits=38, verbose_name='Цена Единицы')),
            ],
            options={
                'verbose_name': 'Услуга Цена',
                'verbose_name_plural': 'Услуги Цены',
                'db_table': 'service_price',
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20, verbose_name='Код')),
                ('description', models.CharField(error_messages={'requared': 'Необходимо заполнить описание услуги'}, max_length=50, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Тип Услуги',
                'verbose_name_plural': 'Тип Услуг',
                'db_table': 'service_type',
            },
        ),
        migrations.CreateModel(
            name='UnitOfMeasure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Код')),
                ('description', models.CharField(max_length=50, verbose_name='Описание')),
                ('okei_code', models.CharField(max_length=3, verbose_name='Код ОКЕИ')),
            ],
            options={
                'verbose_name': 'Единица Измерения',
                'verbose_name_plural': 'Единицы Измерения',
                'db_table': 'unit_of_measure',
            },
        ),
        migrations.CreateModel(
            name='VatPostingGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Код')),
                ('description', models.CharField(max_length=50, verbose_name='Описание')),
                ('vat', models.DecimalField(decimal_places=20, max_digits=38, verbose_name='НДС %')),
                ('vatextempt', models.BooleanField(verbose_name='Освоб. от НДС')),
            ],
            options={
                'verbose_name': 'НДС Учетная Группа',
                'verbose_name_plural': 'НДС Учетные Группы',
                'db_table': 'vat_posting_group',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Код')),
                ('description', models.CharField(max_length=50, verbose_name='Краткое описание')),
                ('full_name', models.CharField(max_length=1000, verbose_name='Полное наименование')),
                ('unit_price', models.DecimalField(decimal_places=20, max_digits=38, verbose_name='Цена Единицы')),
                ('external_service_code', models.CharField(max_length=50, verbose_name='Внешний Код Услуги')),
                ('blocked', models.BooleanField(verbose_name='Блокирована')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_type', to='settings.servicetype', verbose_name='Тип Услуги')),
                ('unit_of_measure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='settings.unitofmeasure', verbose_name='Единица Измерения')),
                ('vat_posting_group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='settings.vatpostinggroup', verbose_name='НДС Учетная Группа')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
                'db_table': 'service',
            },
        ),
        migrations.CreateModel(
            name='NoSeriesLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('starting_date', models.DateField(unique=True, verbose_name='Дата начала')),
                ('starting_no', models.CharField(max_length=20, verbose_name='Начальный Но')),
                ('ending_no', models.CharField(max_length=20, verbose_name='Начальный Но')),
                ('warning_no', models.CharField(max_length=20, verbose_name='Конечный Но')),
                ('increment_by', models.PositiveIntegerField(default=1, verbose_name='Увеличивать На')),
                ('last_no_used', models.CharField(default='', max_length=20, verbose_name='Посл.Исп. Но')),
                ('last_date_used', models.DateField(blank=True, verbose_name='Посл.Исп. Дата')),
                ('blocked', models.BooleanField(default=False, verbose_name='Заблокирована')),
                ('series_no', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='noseriesline_noseries', to='settings.noseries', verbose_name='Код')),
            ],
            options={
                'verbose_name': 'Серия Номеров Строка',
                'verbose_name_plural': 'Серия Номеров Строки',
                'db_table': 'no_series_line',
            },
        ),
    ]
