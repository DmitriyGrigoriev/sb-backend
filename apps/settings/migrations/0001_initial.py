# Generated by Django 3.2.7 on 2021-11-08 11:26

import concurrency.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='NoSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Изменена')),
                ('version', concurrency.fields.IntegerVersionField(default=0, help_text='record revision number', verbose_name='Версия')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Код')),
                ('description', models.CharField(max_length=100, verbose_name='Описание')),
                ('date_order', models.BooleanField(default=False, verbose_name='Порядок Дат')),
            ],
            options={
                'verbose_name': 'Серия Номеров',
                'verbose_name_plural': 'Серии Номеров',
                'db_table': 'no_series',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Изменена')),
                ('version', concurrency.fields.IntegerVersionField(default=0, help_text='record revision number', verbose_name='Версия')),
                ('code', models.CharField(blank=True, default='', max_length=20, unique=True, verbose_name='Код Услуги')),
                ('description', models.CharField(error_messages={'requared': 'Необходимо заполнить описание услуги'}, max_length=50, verbose_name='Краткое описание')),
                ('full_name', models.CharField(blank=True, default='', max_length=1000, verbose_name='Полное наименование')),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, error_messages={'requared': 'Необходимо указать цену услуги'}, max_digits=18, verbose_name='Цена Единицы')),
                ('price_date', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('external_service_code', models.CharField(blank=True, default='', max_length=50, verbose_name='Внешний Код Услуги')),
                ('blocked', models.BooleanField(default=False, verbose_name='Блокирована')),
            ],
            options={
                'verbose_name': 'Услуга и цена',
                'verbose_name_plural': 'Услуги и цены',
                'db_table': 'service',
                'ordering': ['-code'],
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Изменена')),
                ('version', concurrency.fields.IntegerVersionField(default=0, help_text='record revision number', verbose_name='Версия')),
                ('code', models.CharField(max_length=20, verbose_name='Код Типа Услуг')),
                ('description', models.CharField(error_messages={'requared': 'Необходимо заполнить описание услуги'}, max_length=50, verbose_name='Описание услуги')),
            ],
            options={
                'verbose_name': 'Тип Услуги',
                'verbose_name_plural': 'Тип Услуг',
                'db_table': 'service_type',
            },
        ),
        migrations.CreateModel(
            name='UnitOfMeasure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Изменена')),
                ('version', concurrency.fields.IntegerVersionField(default=0, help_text='record revision number', verbose_name='Версия')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Код Ед. Измерения')),
                ('description', models.CharField(max_length=50, verbose_name='Описание')),
                ('okei_code', models.CharField(blank=True, default='', max_length=3, verbose_name='Код ОКЕИ')),
            ],
            options={
                'verbose_name': 'Единица Измерения',
                'verbose_name_plural': 'Единицы Измерения',
                'db_table': 'unit_of_measure',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='VatPostingGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Изменена')),
                ('version', concurrency.fields.IntegerVersionField(default=0, help_text='record revision number', verbose_name='Версия')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Код Учетной Группы')),
                ('description', models.CharField(max_length=50, verbose_name='Описание')),
                ('vat', models.DecimalField(decimal_places=2, max_digits=18, verbose_name='НДС %')),
                ('vatextempt', models.BooleanField(verbose_name='Освоб. от НДС')),
            ],
            options={
                'verbose_name': 'НДС Учетная Группа',
                'verbose_name_plural': 'НДС Учетные Группы',
                'db_table': 'vat_posting_group',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='ServicePrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Изменена')),
                ('version', concurrency.fields.IntegerVersionField(default=0, help_text='record revision number', verbose_name='Версия')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, error_messages={'requared': 'Необходимо указать цену услуги'}, max_digits=18, verbose_name='Цена Единицы')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='settings.service', verbose_name='Услуги')),
            ],
            options={
                'verbose_name': 'Цена',
                'verbose_name_plural': 'Цены',
                'db_table': 'service_price',
                'ordering': ['start_date'],
            },
        ),
        migrations.AddField(
            model_name='service',
            name='service_type',
            field=models.ForeignKey(error_messages={'requared': 'Необходимо указать тип услуги'}, on_delete=django.db.models.deletion.PROTECT, related_name='service_types', to='settings.servicetype', verbose_name='Тип Услуги'),
        ),
        migrations.AddField(
            model_name='service',
            name='unit_of_measure',
            field=models.ForeignKey(error_messages={'requared': 'Необходимо указать еденицу измерения'}, on_delete=django.db.models.deletion.PROTECT, related_name='measures', to='settings.unitofmeasure', verbose_name='Единица Измерения'),
        ),
        migrations.AddField(
            model_name='service',
            name='vat_posting_group',
            field=models.ForeignKey(error_messages={'requared': 'Необходимо указать учетную группу'}, on_delete=django.db.models.deletion.PROTECT, related_name='vat_groups', to='settings.vatpostinggroup', verbose_name='НДС Учетная Группа'),
        ),
        migrations.CreateModel(
            name='NoSeriesSetup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Изменена')),
                ('version', concurrency.fields.IntegerVersionField(default=0, help_text='record revision number', verbose_name='Версия')),
                ('setup_series_no', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='setup_series_no', to='settings.noseries', verbose_name='Серия Номеров Строка')),
            ],
            options={
                'verbose_name': 'Настройка Серии Номеров',
                'verbose_name_plural': 'Настройка Серии Номеров',
                'db_table': 'noseries_setup',
            },
        ),
        migrations.CreateModel(
            name='NoSeriesLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Изменена')),
                ('version', concurrency.fields.IntegerVersionField(default=0, help_text='record revision number', verbose_name='Версия')),
                ('starting_date', models.DateField(unique=True, verbose_name='Дата начала')),
                ('starting_no', models.CharField(max_length=20, verbose_name='Начальный Но')),
                ('ending_no', models.CharField(max_length=20, verbose_name='Конечный Но')),
                ('last_date_used', models.DateField(blank=True, null=True, verbose_name='Посл.Исп. Дата')),
                ('warning_no', models.CharField(blank=True, default='', max_length=20, verbose_name='Предупредительный Но')),
                ('last_no_used', models.CharField(blank=True, default='', max_length=20, verbose_name='Посл.Исп. Но')),
                ('increment_by', models.PositiveIntegerField(default=1, verbose_name='Увеличивать На')),
                ('blocked', models.BooleanField(default=False, verbose_name='Заблокирована')),
                ('series_no', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='noseriesline', to='settings.noseries', verbose_name='Код')),
            ],
            options={
                'verbose_name': 'Серия Номеров Строка',
                'verbose_name_plural': 'Серия Номеров Строки',
                'db_table': 'no_series_line',
                'ordering': ['-starting_date'],
            },
        ),
        migrations.AddConstraint(
            model_name='serviceprice',
            constraint=models.UniqueConstraint(fields=('service', 'start_date'), name='unique_start_date'),
        ),
        migrations.AddConstraint(
            model_name='serviceprice',
            constraint=models.CheckConstraint(check=models.Q(('price__gte', '0.01')), name='price_must_be_greater_than_0'),
        ),
        migrations.AlterUniqueTogether(
            name='serviceprice',
            unique_together={('service', 'start_date')},
        ),
        migrations.AlterUniqueTogether(
            name='noseriesline',
            unique_together={('series_no', 'starting_date')},
        ),
    ]